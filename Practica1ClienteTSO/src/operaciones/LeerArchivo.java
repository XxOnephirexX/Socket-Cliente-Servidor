package operaciones;

import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import main.ArchivoContenido;
import main.ClienteGUI;
import main.ClienteSocket;

/**
 *
 * @author Irvin Carapia Hernández
 */
public class LeerArchivo extends javax.swing.JFrame {

    /**
     * Creates new form ClienteGUI
     *
     * @param archivos
     */
    public LeerArchivo(ArrayList<String> archivos) {
        initComponents();
        configuracionVentana();
        instanciarComboBox(archivos);
    }

    private void configuracionVentana() {
        setSize(750, 480);
        setLocationRelativeTo(null);
    }

    private void instanciarComboBox(ArrayList<String> archivos) {
        jComboBoxArchivo.removeAllItems(); // Limpia los elementos existentes en el ComboBox
        for (String archivo : archivos) {
            jComboBoxArchivo.addItem(archivo); // Agrega cada nombre de archivo al ComboBox
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelMenu = new javax.swing.JPanel();
        jLabelTitulo = new javax.swing.JLabel();
        jComboBoxArchivo = new javax.swing.JComboBox<>();
        jScrollPaneTexto = new javax.swing.JScrollPane();
        jTextAreaTexto = new javax.swing.JTextArea();
        jButtonAtras = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Leer Archivo");
        setName("leerArchivo"); // NOI18N
        setPreferredSize(new java.awt.Dimension(640, 480));
        setResizable(false);

        jPanelMenu.setLayout(new java.awt.GridBagLayout());

        jLabelTitulo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelTitulo.setText("Seleccione un archivo para leerlo: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        jPanelMenu.add(jLabelTitulo, gridBagConstraints);

        jComboBoxArchivo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jComboBoxArchivo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxArchivoItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 11;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 285;
        gridBagConstraints.ipady = 25;
        jPanelMenu.add(jComboBoxArchivo, gridBagConstraints);

        jTextAreaTexto.setEditable(false);
        jTextAreaTexto.setColumns(20);
        jTextAreaTexto.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextAreaTexto.setRows(5);
        jScrollPaneTexto.setViewportView(jTextAreaTexto);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 15;
        gridBagConstraints.gridheight = 13;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 200;
        jPanelMenu.add(jScrollPaneTexto, gridBagConstraints);

        jButtonAtras.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButtonAtras.setText("Atrás");
        jButtonAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtrasActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 19;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.weighty = 0.2;
        jPanelMenu.add(jButtonAtras, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtrasActionPerformed
        ClienteGUI clienteGUI = new ClienteGUI();

        setVisible(false);
        dispose();

        clienteGUI.setVisible(true);
    }//GEN-LAST:event_jButtonAtrasActionPerformed

    private void jComboBoxArchivoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxArchivoItemStateChanged
        if (jComboBoxArchivo.getSelectedItem() != null) {
            String nombreArchivo = (String) jComboBoxArchivo.getSelectedItem();
            try {
                // Crear una instancia de ClienteSocket y comunicarse con el servidor
                ClienteSocket clienteSocket = new ClienteSocket("192.168.1.73", 8000);

                // Enviar una solicitud al servidor para obtener el contenido del archivo
                clienteSocket.enviarMensaje("LECTURA");
                clienteSocket.enviarMensaje(nombreArchivo);

                // Recibir la respuesta del servidor (contenido del archivo)
                Object respuesta = clienteSocket.recibirRespuesta();

                if (respuesta instanceof ArchivoContenido) {
                    // Si la respuesta es una instancia de ArchivoContenido, obtén el contenido del archivo
                    ArchivoContenido archivoContenido = (ArchivoContenido) respuesta;

                    // Muestra el contenido en el JTextArea (puedes ajustar cómo deseas mostrarlo)
                    jTextAreaTexto.setText(new String(archivoContenido.getContenido()));
                } else {
                    // Manejar la respuesta si no es del tipo esperado
                }

                clienteSocket.cerrarConexion();
            } catch (IOException | ClassNotFoundException ex) {
                Logger.getLogger(LeerArchivo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jComboBoxArchivoItemStateChanged

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAtras;
    private javax.swing.JComboBox<String> jComboBoxArchivo;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JPanel jPanelMenu;
    private javax.swing.JScrollPane jScrollPaneTexto;
    private javax.swing.JTextArea jTextAreaTexto;
    // End of variables declaration//GEN-END:variables
}
